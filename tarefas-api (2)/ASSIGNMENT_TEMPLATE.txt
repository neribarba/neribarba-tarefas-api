ATIVIDADE PRÁTICA

COLE AQUI O LINK PARA SEU PROJETO NO GITHUB OU SIMILAR
https://github.com/neribarba/tarefas-api

Prints dos testes realizados no Postman, demonstrando cada funcionalidade da API.

Teste 1 - Inserir novas tarefas e verificar se aparecem na lista.
Insira 3 tarefas, sendo que uma delas deverá obedecer o critério abaixo:
Inserir como tarefa  Desenvolvimento da API , como responsável coloque seu primeiro nome seguido  do RU, para data de entrega coloque 12/12/2025.

Substitua esse texto pelo endpoint
POST /api/tarefas

Substitua esse texto pelo print
[COLE AQUI O PRINT do 201 Created e da listagem]



Teste 2 - Listar todas as tarefas cadastradas

Substitua esse texto pelo endpoint
GET /api/tarefas

Substitua esse texto pelo print
[COLE AQUI O PRINT do 200 OK com a lista]


Teste 3 - Atualizar o cadastro (com seu nome) e verificar se os dados estão refletidos corretamente.

Substitua esse texto pelo endpoint
PUT /api/tarefas/{id}

Substitua esse texto pelo print
[COLE AQUI O PRINT do 200 OK e listagem confirmando a atualização]



Teste 4 - Excluir um cadastro(com seu nome) e mostrar que ele desaparece da lista.

Substitua esse texto pelo endpoint
DELETE /api/tarefas/{id}

Substitua esse texto pelo print
[COLE AQUI O PRINT do 204 No Content e listagem sem a tarefa]


Trabalho de Desenvolvimento Web Back end: Implementação de uma API de Tarefas
O objetivo deste trabalho é implementar uma API RESTful para gerenciamento de tarefas. A API permite cadastro, consulta, atualização e remoção de tarefas, contendo nome da tarefa, data de entrega e responsável.

Requisitos da API
1. Requisitos Funcionais:
• Criar uma tarefa contendo: Nome da tarefa, Data de entrega, Responsável pela tarefa
• Consultar todas as tarefas cadastradas
• Consultar uma tarefa específica pelo ID
• Atualizar uma tarefa existente
• Remover uma tarefa

2. Requisitos Não Funcionais:
• A API foi desenvolvida em Java com Spring Boot
• Banco de dados relacional: MySQL
• Spring Data JPA para manipulação dos dados
• Postman para documentação/testes
• Padrões REST

Instruções para Implementação
1. Configuração do Projeto:
• Spring Initializr (ou este projeto pronto com Maven)
• Dependências: Spring Web, Spring Data JPA, Validation, MySQL Driver

2. Estrutura da API:
• Model: Tarefa (id, nome, dataEntrega, responsavel)
• Repository: TarefaRepository (JpaRepository)
• Controller: TarefaController com endpoints REST

3. Persistência dos Dados:
• Configurar o banco no arquivo src/main/resources/application.properties

4. Testes e Documentação:
• Importar a coleção Postman em postman/Tarefas_API.postman_collection.json
• Realizar os testes e anexar os prints acima.
